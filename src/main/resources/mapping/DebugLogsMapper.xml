<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.org.account.mapper.DebugLogsMapper" >
  <resultMap id="BaseResultMap" type="com.org.account.model.DebugLogs" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="account_id" property="accountId" jdbcType="VARCHAR" />
    <result column="appkey" property="appkey" jdbcType="VARCHAR" />
    <result column="action" property="action" jdbcType="VARCHAR" />
    <result column="msg" property="msg" jdbcType="VARCHAR" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="channel" property="channel" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, account_id, appkey, action, msg, ip, created_at, channel
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from debug_logs
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from debug_logs
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.org.account.model.DebugLogs" >
    insert into debug_logs (id, account_id, appkey, 
      action, msg, ip, created_at, 
      channel)
    values (#{id,jdbcType=INTEGER}, #{accountId,jdbcType=VARCHAR}, #{appkey,jdbcType=VARCHAR}, 
      #{action,jdbcType=VARCHAR}, #{msg,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{channel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.org.account.model.DebugLogs" >
    insert into debug_logs
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="appkey != null" >
        appkey,
      </if>
      <if test="action != null" >
        action,
      </if>
      <if test="msg != null" >
        msg,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="channel != null" >
        channel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="appkey != null" >
        #{appkey,jdbcType=VARCHAR},
      </if>
      <if test="action != null" >
        #{action,jdbcType=VARCHAR},
      </if>
      <if test="msg != null" >
        #{msg,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="channel != null" >
        #{channel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.org.account.model.DebugLogs" >
    update debug_logs
    <set >
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="appkey != null" >
        appkey = #{appkey,jdbcType=VARCHAR},
      </if>
      <if test="action != null" >
        action = #{action,jdbcType=VARCHAR},
      </if>
      <if test="msg != null" >
        msg = #{msg,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="channel != null" >
        channel = #{channel,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.org.account.model.DebugLogs" >
    update debug_logs
    set account_id = #{accountId,jdbcType=VARCHAR},
      appkey = #{appkey,jdbcType=VARCHAR},
      action = #{action,jdbcType=VARCHAR},
      msg = #{msg,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      channel = #{channel,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>